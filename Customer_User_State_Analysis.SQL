// Purpose: Describe customer behavior through the use of user states and analysis of transitions among them between months.
//              -Place customers into user state buckets defined in diagram for each month of operation
//              -Analyze monthly rate of user state transition for each distinct transition (arrow) in diagram

WITH REFERENCE_DATE_TABLE AS
(
  // List distinct order months (REFERENCE_DATE) such that customer counts can be made for each user state by month in subsequent CTEs
  
  SELECT 
    DISTINCT DATE_TRUNC('month',ORDER_DATE) AS REFERENCE_DATE
  FROM "DTC_DATA"."WHITEBOX"."JOINEDORDERLEVEL"
  WHERE ORDER_BUYEREMAIL IS NOT NULL
)
, CROSS_TABLE AS
(
  // List number of days since last order (DAYS_SINCE_ORDER) and number of days between last two orders (DAYNUM_BETWEEN_LAST_TWO_ORDERS), specific to each customer (ORDER_BUYEREMAIL) and REFERENCE_DATE
  
  SELECT
     O.ORDER_BUYEREMAIL
    ,RD.REFERENCE_DATE
    ,O.ORDER_DATE
    ,O.ORDER_ID
    ,CASE WHEN O.ORDER_DATE <= RD.REFERENCE_DATE THEN TIMESTAMPDIFF('days',O.ORDER_DATE,RD.REFERENCE_DATE) ELSE NULL END AS DAYS_SINCE_ORDER
    ,CASE WHEN O.ORDER_DATE <= RD.REFERENCE_DATE THEN O.ORDER_DATE ELSE NULL END AS ORDER_DATE_REF
    ,TIMESTAMPDIFF('days',NTH_VALUE(ORDER_DATE_REF,2) FROM LAST IGNORE NULLS OVER (PARTITION BY O.ORDER_BUYEREMAIL, RD.REFERENCE_DATE ORDER BY ORDER_DATE_REF, O.ORDER_ID),NTH_VALUE(ORDER_DATE_REF,1) FROM LAST IGNORE NULLS OVER (PARTITION BY O.ORDER_BUYEREMAIL, RD.REFERENCE_DATE ORDER BY ORDER_DATE_REF, O.ORDER_ID)) AS DAYNUM_BETWEEN_LAST_TWO_ORDERS
  FROM "DTC_DATA"."WHITEBOX"."JOINEDORDERLEVEL" AS O
  CROSS JOIN REFERENCE_DATE_TABLE AS RD
  WHERE ORDER_DATE <= REFERENCE_DATE
  ORDER BY 1,2,3
)
, CUSTOMER_STATE_REFERENCE AS 
(
  // Provide appropriate user state labels for each customer in each reference month, based on his/her ORDER_COUNT ("ATO" in diagram), DAYS_BETWEEN_LAST_TWO_ORDERS ("TE" in diagram),
  //    ORDER_COUNT_R60D ("L60D" in diagram), & ORDER_COUNT_R180D ("L180D" in diagram)
  // See diagram
  
  SELECT
     ORDER_BUYEREMAIL
    ,REFERENCE_DATE
    ,COUNT(DISTINCT CASE WHEN ORDER_DATE <= REFERENCE_DATE THEN ORDER_ID ELSE NULL END) AS ORDER_COUNT
    ,COUNT(DISTINCT CASE WHEN DAYS_SINCE_ORDER <= 60 THEN ORDER_ID ELSE NULL END) AS ORDER_COUNT_R60D
    ,COUNT(DISTINCT CASE WHEN DAYS_SINCE_ORDER > 60 AND DAYS_SINCE_ORDER <= 180 THEN ORDER_ID ELSE NULL END) AS ORDER_COUNT_R180D
    ,MIN(DAYNUM_BETWEEN_LAST_TWO_ORDERS) AS DAYS_BETWEEN_LAST_TWO_ORDERS
    ,CASE WHEN (ORDER_COUNT = 1 AND ORDER_COUNT_R60D = 1) THEN 'Trial'
          WHEN (ORDER_COUNT = 1 AND ORDER_COUNT_R60D = 0 AND ORDER_COUNT_R180D = 1) THEN 'Lost'
          WHEN (ORDER_COUNT = 1 AND ORDER_COUNT_R60D = 0 AND ORDER_COUNT_R180D = 0) THEN 'Lost Forever'
          WHEN (ORDER_COUNT = 2 AND ORDER_COUNT_R60D = 1 AND DAYS_BETWEEN_LAST_TWO_ORDERS > 60) THEN 'Reactivated Trial'
          WHEN ((ORDER_COUNT_R60D >= 2) OR (ORDER_COUNT_R60D = 1 AND DAYS_BETWEEN_LAST_TWO_ORDERS <= 60)) THEN 'Regular'
          WHEN (ORDER_COUNT > 2 AND ORDER_COUNT_R60D = 1 AND DAYS_BETWEEN_LAST_TWO_ORDERS > 60) THEN 'Winback'
          WHEN (ORDER_COUNT > 1 AND ORDER_COUNT_R60D = 0 AND ORDER_COUNT_R180D >= 1) THEN 'Lapsed'
          WHEN (ORDER_COUNT > 1 AND ORDER_COUNT_R60D = 0 AND ORDER_COUNT_R180D = 0) THEN 'Lapsed Forever'
          ELSE NULL END AS CUSTOMER_USERSTATE
  FROM CROSS_TABLE
  GROUP BY 1,2
  ORDER BY 1,2
)
,  CUSTOMER_STATE_REFERENCE_W_PREV AS 
(
  // Add new column for previous month's user state for each customer in each reference month, such that monthly user state transitions can be counted in the following CTE
  
  SELECT
     *
    ,LAG(CUSTOMER_USERSTATE) OVER (PARTITION BY ORDER_BUYEREMAIL ORDER BY REFERENCE_DATE) AS CUSTOMER_USERSTATE_PREV
  FROM CUSTOMER_STATE_REFERENCE
)
// Count the number of customers in each user state (boxed in diagram) during each reference month, 
// count the number of customers that performed a distinct user state transition between adjacent reference months, from customer_userstate_prev to customer_userstate

SELECT
   REFERENCE_DATE
  ,COUNT(DISTINCT CASE WHEN CUSTOMER_USERSTATE = 'Trial' THEN ORDER_BUYEREMAIL ELSE NULL END) AS COUNT_TRIAL
  ,COUNT(DISTINCT CASE WHEN CUSTOMER_USERSTATE = 'Lost' THEN ORDER_BUYEREMAIL ELSE NULL END) AS COUNT_LOST
  ,COUNT(DISTINCT CASE WHEN CUSTOMER_USERSTATE = 'Lost Forever' THEN ORDER_BUYEREMAIL ELSE NULL END) AS COUNT_LOST_FOREVER
  ,COUNT(DISTINCT CASE WHEN CUSTOMER_USERSTATE = 'Reactivated Trial' THEN ORDER_BUYEREMAIL ELSE NULL END) AS COUNT_REACTIVATEDTRIAL
  ,COUNT(DISTINCT CASE WHEN CUSTOMER_USERSTATE = 'Regular' THEN ORDER_BUYEREMAIL ELSE NULL END) AS COUNT_REGULAR
  ,COUNT(DISTINCT CASE WHEN CUSTOMER_USERSTATE = 'Winback' THEN ORDER_BUYEREMAIL ELSE NULL END) AS COUNT_WINBACK
  ,COUNT(DISTINCT CASE WHEN CUSTOMER_USERSTATE = 'Lapsed' THEN ORDER_BUYEREMAIL ELSE NULL END) AS COUNT_LAPSED
  ,COUNT(DISTINCT CASE WHEN CUSTOMER_USERSTATE = 'Lapsed Forever' THEN ORDER_BUYEREMAIL ELSE NULL END) AS COUNT_LAPSED_FOREVER

  ,COUNT(DISTINCT CASE WHEN CUSTOMER_USERSTATE = 'Trial' AND CUSTOMER_USERSTATE_PREV IS NULL THEN ORDER_BUYEREMAIL ELSE NULL END) AS COUNT_NEW_TO_TRIAL
  ,COUNT(DISTINCT CASE WHEN CUSTOMER_USERSTATE = 'Regular' AND CUSTOMER_USERSTATE_PREV = 'Trial' THEN ORDER_BUYEREMAIL ELSE NULL END) AS COUNT_TRIAL_TO_REGULAR
  ,COUNT(DISTINCT CASE WHEN CUSTOMER_USERSTATE = 'Regular' AND CUSTOMER_USERSTATE_PREV IS NULL THEN ORDER_BUYEREMAIL ELSE NULL END) AS COUNT_NEW_TO_REGULAR
  ,COUNT(DISTINCT CASE WHEN CUSTOMER_USERSTATE = 'Lost' AND CUSTOMER_USERSTATE_PREV = 'Trial' THEN ORDER_BUYEREMAIL ELSE NULL END) AS COUNT_TRIAL_TO_LOST
  ,COUNT(DISTINCT CASE WHEN (CUSTOMER_USERSTATE = 'Reactivated Trial' OR CUSTOMER_USERSTATE = 'Regular') AND CUSTOMER_USERSTATE_PREV = 'Lost' THEN ORDER_BUYEREMAIL ELSE NULL END) AS COUNT_LOST_TO_REACTIVATED_TRIAL_OR_REGULAR
  ,COUNT(DISTINCT CASE WHEN CUSTOMER_USERSTATE = 'Lost Forever' AND CUSTOMER_USERSTATE_PREV = 'Lost' THEN ORDER_BUYEREMAIL ELSE NULL END) AS COUNT_LOST_TO_LOST_FOREVER
  ,COUNT(DISTINCT CASE WHEN (CUSTOMER_USERSTATE = 'Reactivated Trial' OR CUSTOMER_USERSTATE = 'REGULAR') AND CUSTOMER_USERSTATE_PREV = 'Lost Forever' THEN ORDER_BUYEREMAIL ELSE NULL END) AS COUNT_LOST_FOREVER_TO_REACTIVATED_TRIAL_OR_REGULAR
  ,COUNT(DISTINCT CASE WHEN CUSTOMER_USERSTATE = 'Regular' AND CUSTOMER_USERSTATE_PREV = 'Reactivated Trial' THEN ORDER_BUYEREMAIL ELSE NULL END) AS COUNT_REACTIVATED_TRIAL_TO_REGULAR
  ,COUNT(DISTINCT CASE WHEN (CUSTOMER_USERSTATE = 'Lapsed' OR CUSTOMER_USERSTATE = 'Lapsed Forever') AND CUSTOMER_USERSTATE_PREV = 'Reactivated Trial' THEN ORDER_BUYEREMAIL ELSE NULL END) AS COUNT_REACTIVATED_TRIAL_TO_LAPSED_OR_LAPSED_FOREVER
  ,COUNT(DISTINCT CASE WHEN (CUSTOMER_USERSTATE = 'Regular' OR CUSTOMER_USERSTATE = 'Winback')  AND CUSTOMER_USERSTATE_PREV = 'Lapsed' THEN ORDER_BUYEREMAIL ELSE NULL END) AS COUNT_LAPSED_TO_WINBACK_OR_REGULAR
  ,COUNT(DISTINCT CASE WHEN CUSTOMER_USERSTATE = 'Lapsed Forever' AND CUSTOMER_USERSTATE_PREV = 'Lapsed' THEN ORDER_BUYEREMAIL ELSE NULL END) AS COUNT_LAPSED_TO_LAPSED_FOREVER
  ,COUNT(DISTINCT CASE WHEN (CUSTOMER_USERSTATE = 'Regular' OR CUSTOMER_USERSTATE = 'Winback')  AND CUSTOMER_USERSTATE_PREV = 'Lapsed Forever' THEN ORDER_BUYEREMAIL ELSE NULL END) AS COUNT_LAPSED_FOREVER_TO_WINBACK_OR_REGULAR
  ,COUNT(DISTINCT CASE WHEN CUSTOMER_USERSTATE = 'Regular' AND CUSTOMER_USERSTATE_PREV = 'Winback' THEN ORDER_BUYEREMAIL ELSE NULL END) AS COUNT_WINBACK_TO_REGULAR
  ,COUNT(DISTINCT CASE WHEN (CUSTOMER_USERSTATE = 'Lapsed' OR CUSTOMER_USERSTATE = 'Lapsed Forever') AND CUSTOMER_USERSTATE_PREV = 'Regular' THEN ORDER_BUYEREMAIL ELSE NULL END) AS COUNT_REGULAR_TO_LAPSED_OR_LAPSED_FOREVER
  ,COUNT(DISTINCT CASE WHEN (CUSTOMER_USERSTATE = 'Lapsed' OR CUSTOMER_USERSTATE = 'Lapsed Forever') AND CUSTOMER_USERSTATE_PREV = 'Winback' THEN ORDER_BUYEREMAIL ELSE NULL END) AS COUNT_WINBACK_TO_LAPSED_OR_LAPSED_FOREVER
FROM CUSTOMER_STATE_REFERENCE_W_PREV
GROUP BY 1
ORDER BY 1
;

